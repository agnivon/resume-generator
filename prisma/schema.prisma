// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Resume        Resume[]
  ResumeV2      ResumeV2[]

  @@map("users")
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Resume {
  id              String                 @id @default(auto()) @map("_id") @db.ObjectId
  user            User                   @relation(fields: [userId], references: [id])
  userId          String                 @db.ObjectId
  name            String
  createdOn       Int
  summary         String
  domain          String                 @default("")
  experienceLevel String                 @default("")
  jobTitle        String                 @default("")
  companyName     String                 @default("")
  jobDescription  String                 @default("")
  contact         Contact?
  experiences     Experience[]
  projects        Project[]
  education       Education[]
  certifications  Certification[]
  courses         Course[]
  skills          Skill[]
  previewSettings ResumePreviewSettings?

  @@map("resumes")
}

model Contact {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  fullName    String
  email       String
  phone       String
  linkedinUrl String
  personalUrl String
  country     String
  state       String
  city        String
  Resume      Resume @relation(fields: [resumeId], references: [id], onDelete: Cascade)
  resumeId    String @unique @db.ObjectId

  @@map("contacts")
}

model Experience {
  id               String  @id @default(auto()) @map("_id") @db.ObjectId
  role             String
  companyName      String
  startDate        String
  endDate          String
  companyLocation  String
  description      String
  currentlyWorking Boolean
  Resume           Resume  @relation(fields: [resumeId], references: [id], onDelete: Cascade)
  resumeId         String  @db.ObjectId
  hidden           Boolean @default(false)
  displayOrder     Int     @default(0)
  resumeV2Id       String? @db.ObjectId

  @@map("experiences")
}

model Project {
  id               String  @id @default(auto()) @map("_id") @db.ObjectId
  title            String
  organization     String
  startDate        String
  endDate          String
  url              String
  description      String
  currentlyWorking Boolean
  Resume           Resume  @relation(fields: [resumeId], references: [id], onDelete: Cascade)
  resumeId         String  @db.ObjectId
  hidden           Boolean @default(false)
  displayOrder     Int     @default(0)
  resumeV2Id       String? @db.ObjectId

  @@map("projects")
}

model Education {
  id             String  @id @default(auto()) @map("_id") @db.ObjectId
  major          String
  institution    String
  location       String
  year           String
  minor          String
  gpa            String
  additionalInfo String
  Resume         Resume  @relation(fields: [resumeId], references: [id], onDelete: Cascade)
  resumeId       String  @db.ObjectId
  hidden         Boolean @default(false)
  displayOrder   Int     @default(0)
  resumeV2Id     String? @db.ObjectId

  @@map("education")
}

model Certification {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  institution  String
  year         String
  relevance    String
  Resume       Resume  @relation(fields: [resumeId], references: [id], onDelete: Cascade)
  resumeId     String  @db.ObjectId
  hidden       Boolean @default(false)
  displayOrder Int     @default(0)
  resumeV2Id   String? @db.ObjectId

  @@map("certifications")
}

model Course {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  institution  String
  year         String
  skills       String
  applications String
  Resume       Resume  @relation(fields: [resumeId], references: [id], onDelete: Cascade)
  resumeId     String  @db.ObjectId
  hidden       Boolean @default(false)
  displayOrder Int     @default(0)
  resumeV2Id   String? @db.ObjectId

  @@map("courses")
}

model Skill {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  skill        String
  Resume       Resume  @relation(fields: [resumeId], references: [id], onDelete: Cascade)
  resumeId     String  @db.ObjectId
  hidden       Boolean @default(false)
  displayOrder Int     @default(0)
  resumeV2Id   String? @db.ObjectId

  @@map("skills")
}

model ResumePreviewSettings {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  Resume      Resume   @relation(fields: [resumeId], references: [id], onDelete: Cascade)
  ResumeV2    ResumeV2 @relation(fields: [resumeId], references: [id], onDelete: Cascade)
  resumeId    String   @unique @db.ObjectId
  template    String
  font        String
  paperSize   String
  fontSize    Float
  lineHeight  Float
  accentColor String   @default("")

  @@map("preview-settings")
}

model UserMembership {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  userId  String  @unique
  premium Boolean @default(false)

  @@map("user-memberships")
}

model ResumeV2 {
  id              String                 @id @default(auto()) @map("_id") @db.ObjectId
  user            User                   @relation(fields: [userId], references: [id])
  userId          String                 @db.ObjectId
  name            String
  createdOn       Int
  summary         String
  domain          String                 @default("")
  experienceLevel String                 @default("")
  jobTitle        String                 @default("")
  companyName     String                 @default("")
  jobDescription  String                 @default("")
  contact         ContactV2?
  experiences     ExperienceV2[]
  projects        ProjectV2[]
  education       EducationV2[]
  certifications  CertificationV2[]
  courses         CourseV2[]
  skills          SkillV2[]
  previewSettings ResumePreviewSettings?

  @@map("resumes-v2")
}

type ContactV2 {
  fullName    String
  email       String
  phone       String
  linkedinUrl String @default("")
  personalUrl String @default("")
  country     String
  state       String @default("")
  city        String @default("")
}

type ExperienceV2 {
  role             String
  companyName      String
  startDate        String
  endDate          String  @default("")
  companyLocation  String  @default("")
  description      String  @default("")
  currentlyWorking Boolean @default(false)
  hidden           Boolean @default(false)
  displayOrder     Int     @default(0)
}

type ProjectV2 {
  title            String
  organization     String
  startDate        String
  endDate          String  @default("")
  url              String  @default("")
  description      String  @default("")
  currentlyWorking Boolean @default(false)
  hidden           Boolean @default(false)
  displayOrder     Int     @default(0)
}

type EducationV2 {
  major          String
  institution    String
  location       String
  year           String  @default("")
  minor          String  @default("")
  gpa            String  @default("")
  additionalInfo String  @default("")
  hidden         Boolean @default(false)
  displayOrder   Int     @default(0)
}

type CertificationV2 {
  name         String
  institution  String
  year         String
  relevance    String  @default("")
  hidden       Boolean @default(false)
  displayOrder Int     @default(0)
}

type CourseV2 {
  name         String
  institution  String
  year         String
  skills       String  @default("")
  applications String  @default("")
  hidden       Boolean @default(false)
  displayOrder Int     @default(0)
}

type SkillV2 {
  skill        String
  hidden       Boolean @default(false)
  displayOrder Int     @default(0)
}
